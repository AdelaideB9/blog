<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Posts on AdelaideB9 Blog</title><link>https://blog.adelaideb9.com/posts/</link><description>Recent content in Posts on AdelaideB9 Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 04 Aug 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.adelaideb9.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>A Based Crypto Challenge - DuckCTF 2023</title><link>https://blog.adelaideb9.com/posts/2023/duckctf/based-crypto-challenge/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2023/duckctf/based-crypto-challenge/</guid><description>There&amp;#39;s not much to say here other than this challenge is **BASED**.</description></item><item><title>Easy Overflow - DuckCTF 2023</title><link>https://blog.adelaideb9.com/posts/2023/duckctf/easy-overflow/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2023/duckctf/easy-overflow/</guid><description>I store all of my private data in all of my programs. I mean, why not? It is safe, right...</description></item><item><title>Homebrewed Block Cipher - DuckCTF 2023</title><link>https://blog.adelaideb9.com/posts/2023/duckctf/homebrewed-block-cipher/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2023/duckctf/homebrewed-block-cipher/</guid><description>I have finally created my own, completely secure, cipher. I am so confident that I will even allow you to encrypt your own data with it.</description></item><item><title>Not So Standard Substitution Cipher - DuckCTF 2023</title><link>https://blog.adelaideb9.com/posts/2023/duckctf/not-so-standard-substitution-cipher/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2023/duckctf/not-so-standard-substitution-cipher/</guid><description>I made a machine to implement a substitution cipher. The only issue is that it seemed to encrypt everything in sight, including my flag and all other random stuff. Each line in the attached file is a new piece of encoded information. Please save my flag! The flag will not be encased in `quack{...}`, but it will be the only reasonable text.</description></item><item><title>Return Address Override - DuckCTF 2023</title><link>https://blog.adelaideb9.com/posts/2023/duckctf/return-address-override/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2023/duckctf/return-address-override/</guid><description>Ok. So buffer overflows exist, but if I put my data in a different function, my private data will be safe from buffer overflows.</description></item><item><title>The Lost Book - DuckCTF 2023</title><link>https://blog.adelaideb9.com/posts/2023/duckctf/the-lost-book/</link><pubDate>Fri, 04 Aug 2023 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2023/duckctf/the-lost-book/</guid><description>I run a library, but recently one of my books was returned damaged. Can you please find the book title? &amp;lt;br&amp;gt;&amp;lt;em&amp;gt;The flag for this challenge is the title of this book in the original language.&amp;lt;/em&amp;gt;</description></item><item><title>re-platformer - UACTF 2022</title><link>https://blog.adelaideb9.com/posts/2022/uactf/re-platformer/</link><pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2022/uactf/re-platformer/</guid><description>Have a look around the map for anything that might be of help. It won&amp;#39;t be easy.</description></item><item><title>Blurry-Eyed - UACTF 2022</title><link>https://blog.adelaideb9.com/posts/2022/uactf/blurry-eyed/</link><pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2022/uactf/blurry-eyed/</guid><description>I don&amp;#39;t know about you, but I like my images in stereo.</description></item><item><title>Colour Blind - UACTF 2022</title><link>https://blog.adelaideb9.com/posts/2022/uactf/colour-blind/</link><pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2022/uactf/colour-blind/</guid><description>I think my optometrist might be trolling me. Apparently table inspection skills are required?</description></item><item><title>Non-textual Troubles - UACTF 2022</title><link>https://blog.adelaideb9.com/posts/2022/uactf/nontextual-troubles/</link><pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2022/uactf/nontextual-troubles/</guid><description>After messing up the implementation, I have decided that this is a feature and not a flaw.</description></item><item><title>Vault - IJCTF 2021</title><link>https://blog.adelaideb9.com/posts/2021/ijctf/vault/</link><pubDate>Mon, 26 Jul 2021 05:38:55 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2021/ijctf/vault/</guid><description>A forensics category challenge on recovering TLS session keys from a packet capture, and decrypting TLS traffic tunnelled over ICMP (ping) through a SOCKS proxy, then recovering files from partial HTTP/2 requests.</description></item><item><title>Substitution - ångstromCTF 2021</title><link>https://blog.adelaideb9.com/posts/2021/angstromctf/substitution/</link><pubDate>Thu, 08 Apr 2021 13:12:52 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2021/angstromctf/substitution/</guid><description>A write up for the ångstromCTF crypto challenge substitution</description></item><item><title>notes - UMassCTF '21</title><link>https://blog.adelaideb9.com/posts/2021/umass/notes/</link><pubDate>Mon, 29 Mar 2021 10:25:04 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2021/umass/notes/</guid><description>The breach seems to have originated from this host. Can you find the user&amp;#39;s mistake? Here is a memory image of their workstation from that day.</description></item><item><title>Chicken - UMassCTF '21</title><link>https://blog.adelaideb9.com/posts/2021/umass/chicken/</link><pubDate>Mon, 29 Mar 2021 01:30:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2021/umass/chicken/</guid><description>Chicken Chicken Chicken: Chicken Chicken? A forensics category challenge all about extracting hidden streams in a PDF file and 7-Zip password cracking.</description></item><item><title>Heim - UMassCTF '21</title><link>https://blog.adelaideb9.com/posts/2021/umass/heim/</link><pubDate>Mon, 29 Mar 2021 01:30:00 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2021/umass/heim/</guid><description>Only those who BEARER a token may enter! A web exploitation category challenge on intercepting and forging JSON Web Token from a debugging endpoint to bypass authentication.</description></item><item><title>Small P Problems - UTCTF 2021</title><link>https://blog.adelaideb9.com/posts/2021/utctf/small-p-problems/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +1030</pubDate><guid>https://blog.adelaideb9.com/posts/2021/utctf/small-p-problems/</guid><description>The challenge description starts &amp;lsquo;My buddies Whitfield and Martin were trying to share a secret key&amp;rsquo;, so googling something like &amp;lsquo;Whitfield Martin cipher&amp;rsquo; seems like a good place to begin. Immediately we get results for the Diffie–Hellman key exchange, which fortunately can be described in terms of A, B, p, g, and s (the value of the secret key we need).
Scripts to brute-force this secret key are easy to find on GitHub.</description></item><item><title>Various Vernacular - UTCTF 2021</title><link>https://blog.adelaideb9.com/posts/2021/utctf/various-vernacular/</link><pubDate>Mon, 15 Mar 2021 00:00:00 +1030</pubDate><guid>https://blog.adelaideb9.com/posts/2021/utctf/various-vernacular/</guid><description>We&amp;rsquo;re given the encrypted flag wmysau{foeim_Tfusoli} along with some additional encrypted text to help us &amp;lsquo;Hkgxologflutleiaymt xgf Azutgkrftmtf ltmntf ERW wfr ELW wfmtk Rkweq&amp;rsquo;.
Some familiarity with common ciphers, along with the hint &amp;lsquo;This is a substitution cipher&amp;rsquo;, give us a pretty good direction to pursue so we decided to use this online tool for brute-forcing the solution.
However, trying brute-forcing the text rendered nothing more decipherable than the initial text.</description></item><item><title>NeverLAN CTF 2020 Write-up</title><link>https://blog.adelaideb9.com/posts/2020/neverlan/</link><pubDate>Sat, 08 Feb 2020 14:30:10 +0000</pubDate><guid>https://blog.adelaideb9.com/posts/2020/neverlan/</guid><description>Browser Bias This challenge gives us very little information, just a url to a site that tells us Sorry, this site is only optimized for browsers that run on commodo 64. However, this also narrows our focus down to a singular goal - trying to convince the website that we are accessing it from a whatever a &amp;lsquo;commodo 64&amp;rsquo; is.
The first thing we need to know is how the browser can determine what type of client is making a request to it.</description></item></channel></rss>